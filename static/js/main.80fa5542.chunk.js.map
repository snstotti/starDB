{"version":3,"sources":["components/header/header.js","components/API/Api.js","components/helpers/getIdFromImage.js","components/redux/planetsPageReduce.js","components/spiner/spiner.js","components/PlanetsPage/ShortDescriptionPlanet.js","components/peoplePage/ShortDescriptionPeople.js","components/StarshipsPage/ShortDescriptionStarships.js","components/СommonСontainer/PageContainer/PersonDetails/person-details.js","components/СommonСontainer/PageContainer/ItemList/item-list.js","components/СommonСontainer/PageContainer/PageContainer.js","components/СommonСontainer/PageContainer/ItemList/RenderItem/renderItem.js","components/PlanetsPage/PlanetsPageContainer.js","components/redux/peoplePageReduce.js","components/peoplePage/PeoplePageContainer.js","components/redux/starshipsPageReduce.js","components/StarshipsPage/StarshipsPageContainer.js","components/СommonСontainer/CommonContainer.js","components/random-planet/random-planet.js","components/random-planet/RandomPlanetsContainer.js","components/app/app.js","components/redux/redux-store.js","index.js"],"names":["Header","className","to","instance","Axios","create","baseURL","instanceImage","imageAPI","imageId","get","then","responce","request","responseURL","catch","itemsListAPI","page","data","results","personalAPI","getPerson","id","getPlanetInfo","getStarshipsInfo","extractId","item","match","initialState","imageUrlPlanet","listPlanets","idItemPlanets","planetInfo","pagePlanets","randomPlanets","randomUrlImage","setImageUrl","type","setPlanetInfo","setItemId","setNewPagePlanets","setRandomImage","getUrlimagePlanet","dispatch","a","defaultImage","url","editStatePlanet","planet","name","diameter","population","rotationPeriod","rotation_period","peoplePageReduce","state","action","Spiner","ShortDescriptionPlanet","details","RenderDetailsPeople","gender","birthYear","eyeColor","ShortDescriptionStarships","model","manufacturer","costInCredits","length","crew","passengers","cargo_capacity","PersonDetails","imageUrl","info","way","itemInfo","map","e","key","src","alt","ShortDescriptionPeople","ItemList","list","togglePage","requestList","children","useEffect","onClick","PageContainer","setStartId","getUrlimage","requestInfo","idItem","RenderItem","peopleList","elem","value","Object","values","temp","temp1","compose","connect","planetsPage","setStartIdPlanets","requestPlanetInfo","requestListPlanets","newList","togglePagePlanet","toggle","newPage","props","imageUrlPeople","listPeople","idItemPeople","peopleInfo","pagePeople","setNewPage","editStatePeople","people","birth_year","eye_color","hairColor","hair_color","peoplePage","setStartIdPeople","getUrlimagePeople","requestPeopleInfo","requestListPeople","togglePagePeople","imageUrlStarships","listStarships","idItemStarships","starshipsInfo","pageStarships","editStateStarships","starships","cost_in_credits","starshipsPageReduce","starshipsPage","setStartIdStarships","togglePageStarships","requestStarshipsInfo","Starships","getUrlimageStarships","requestListStarships","CommonContainer","path","RandomPlanets","PlanetView","requestRandomPlanet","useState","random","setRandom","idR","Math","round","timerId","setTimeout","clearTimeout","App","Component","reducer","combineReducers","planetsPageReduce","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.80fa5542.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header=()=>{\r\n\r\n    return( \r\n        <div className='header d-flex align-items-center'>\r\n            <h2 className='header__title'>Star DB</h2>\r\n            <ul className='header__list d-sm-flex'>\r\n                <li className='header__item'><Link className='header-item__link' to='/people'>People</Link></li>\r\n                <li className='header__item'><Link className='header-item__link' to='/planets'>Planets</Link></li>\r\n                <li className='header__item'><Link className='header-item__link' to='/starships'>Starships</Link></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import Axios from \"axios\"\r\n\r\nconst instance = Axios.create({\r\n    baseURL: 'https://swapi.dev/api/'\r\n})\r\nconst instanceImage = Axios.create({\r\n    baseURL: 'https://starwars-visualguide.com/assets/img/'\r\n})\r\n\r\n\r\n\r\nexport const imageAPI = {\r\n    \r\n    getUrlImagePeople(imageId){\r\n       \r\n        return (\r\n            instanceImage.get(`characters/${imageId}.jpg`)\r\n                .then(responce => responce.request.responseURL)\r\n                \r\n        )\r\n    },\r\n    getUrlImagePlanets(imageId){\r\n        return (\r\n            instanceImage.get(`planets/${imageId}.jpg`)\r\n                .then(responce => responce.request.responseURL)\r\n                .catch(()=>null)\r\n        )\r\n    },\r\n    getUrlImageStarships(imageId){\r\n        return (\r\n            instanceImage.get(`starships/${imageId}.jpg`)\r\n                .then(responce => responce.request.responseURL)\r\n                .catch(()=>null)\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport const itemsListAPI = {\r\n    \r\n    getListPeople(page) {\r\n        return (\r\n            instance.get(`people/?page=${page}`)\r\n                .then(responce => responce.data.results)\r\n                // .then(responce => console.log(responce))\r\n                .catch(()=>null)\r\n                \r\n        )\r\n    },\r\n    getListPlanets(page) {\r\n        return (\r\n            instance.get(`planets/?page=${page}`)\r\n                .then(responce => responce.data.results)\r\n                .catch(()=>null)\r\n        )\r\n    },\r\n    getListStarships(page) {\r\n        return (\r\n            instance.get(`starships/?page=${page}`)\r\n                .then(responce => responce.data.results)\r\n                .catch(()=>null)\r\n        )\r\n    }\r\n}\r\n// itemsListAPI.getListPeople(2)\r\nexport const personalAPI = {\r\n    \r\n    getPerson(id) {\r\n        return (\r\n            instance.get(`people/${id}`)\r\n            .then(responce =>responce.data)\r\n        )\r\n    },\r\n    getPlanetInfo(id) {\r\n        return (\r\n            instance.get(`planets/${id}`)\r\n            .then(responce =>responce.data)\r\n        )\r\n    },\r\n    getStarshipsInfo(id) {\r\n        return (\r\n            instance.get(`starships/${id}`)\r\n            .then(responce =>responce.data)\r\n        )\r\n    }\r\n}\r\n// console.log(personalAPI.getPerson(2))\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers() {\r\n        \r\n        return (\r\n            instance.get(`people/`)\r\n                // .then(responce => console.log(responce))\r\n        )\r\n    }\r\n}\r\n\r\n// console.log(itemsListAPI.getListPeople(1))","// import React from 'react'\r\n\r\nexport const extractId=(item)=>{\r\n    const idRegExp = /\\/([0-9]*)\\/$/;  // id\r\n    return item.match(idRegExp)[1]\r\n     \r\n  }\r\n//   extractId('https://swapi.dev/api/people/2/')","import { imageAPI, itemsListAPI, personalAPI } from \"../API/Api\"\r\nimport { extractId } from \"../helpers/getIdFromImage\"\r\n\r\nconst SET_PLANET_INFO = 'SET_PLANET_INFO'\r\nconst SET_IMAGE_URL_PLANETS = 'SET_IMAGE_URL_PLANETS'\r\nconst SET_LIST_PLANET = 'SET_LIST_PLANET'\r\nconst SET_ID_ITEM_PLANETS = 'SET_ID_ITEM_PLANETS'\r\nconst SET_NEW_PAGE_PLANETS = 'SET_NEW_PAGE_PLANETS'\r\nconst SET_RANDOM_PLANETS = 'SET_RANDOM_PLANETS'\r\nconst SET_RANDOM_URL_IMAGE = 'SET_RANDOM_URL_IMAGE'\r\n\r\nlet initialState = {\r\n    imageUrlPlanet: '',\r\n    listPlanets: [],\r\n    idItemPlanets: 1,\r\n    planetInfo: [],\r\n    pagePlanets: 1,\r\n    randomPlanets: [],\r\n    randomUrlImage: null\r\n}\r\n\r\nconst peoplePageReduce =(state = initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_IMAGE_URL_PLANETS :{\r\n            return { ...state, imageUrlPlanet: action.imageUrlPlanet}\r\n        }\r\n        case SET_LIST_PLANET :{\r\n           \r\n            return { ...state, listPlanets: action.listPlanets}\r\n        }\r\n        case SET_PLANET_INFO :{\r\n           \r\n            return { ...state, planetInfo: [action.planetInfo]}\r\n        }\r\n        case SET_ID_ITEM_PLANETS :{\r\n           \r\n            return { ...state, idItemPlanets: action.idItemPlanets}\r\n        }\r\n        case SET_NEW_PAGE_PLANETS :{\r\n           \r\n            return { ...state, pagePlanets: action.pagePlanets}\r\n        }\r\n        case SET_RANDOM_PLANETS :{\r\n           \r\n            return { ...state, randomPlanets: action.randomPlanets}\r\n        }\r\n        case SET_RANDOM_URL_IMAGE :{\r\n           \r\n            return { ...state, randomUrlImage: action.randomUrlImage}\r\n        }\r\n\r\n        default: return state\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport const setImageUrl = imageUrlPlanet => ({type: SET_IMAGE_URL_PLANETS, imageUrlPlanet}) //+\r\nexport const setListPlanets = listPlanets => ({type: SET_LIST_PLANET, listPlanets}) //+\r\nexport const setPlanetInfo = planetInfo => ({type: SET_PLANET_INFO, planetInfo}) \r\nexport const setItemId = idItemPlanets => ({type: SET_ID_ITEM_PLANETS, idItemPlanets})\r\nexport const setNewPagePlanets = pagePlanets => ({type: SET_NEW_PAGE_PLANETS, pagePlanets})\r\nexport const setRandomPlanets = randomPlanets => ({type: SET_RANDOM_PLANETS, randomPlanets})\r\nexport const setRandomImage = randomUrlImage => ({type: SET_RANDOM_URL_IMAGE, randomUrlImage})\r\n\r\n\r\nexport const setStartIdPlanets = (id) => async (dispatch) => {   \r\n    await dispatch(setItemId(id))\r\n}\r\n\r\nexport const planetInfo = (id) => async (dispatch) => {\r\n    const planets = await personalAPI.getPlanet(id)\r\n    dispatch(setPlanetInfo(editStatePlanet(planets)))\r\n}\r\n\r\nexport const togglePagePlanet = (toggle='p', page) => async (dispatch) => {  \r\n    \r\n    const newPage = toggle === 'm' ? page - 1 : page + 1\r\n   \r\n   await dispatch(setNewPagePlanets(newPage))\r\n\r\n   \r\n}\r\n\r\nexport const setStartId = (id) => async (dispatch) => {   \r\n    await dispatch(setItemId(id))\r\n} \r\n\r\n\r\nexport const requestPlanetInfo = (id) => async (dispatch) => {\r\n    const planet = await personalAPI.getPlanetInfo(id)\r\n    dispatch(setPlanetInfo(editStatePlanet(planet)))\r\n} \r\n\r\n\r\nexport const requestRandomPlanet = (id) => async (dispatch) => {\r\n    const planet = await personalAPI.getPlanetInfo(id)\r\n    dispatch(setRandomPlanets(editStatePlanet(planet)))\r\n    const defaultImage = 'https://starwars-visualguide.com/assets/img/big-placeholder.jpg'\r\n    const url = await imageAPI.getUrlImagePlanets(id)\r\n    !url ? dispatch(setRandomImage(defaultImage)) : dispatch(setRandomImage(url))\r\n} \r\n\r\n\r\n\r\nexport const getUrlimagePlanet = (id) => async (dispatch) => {\r\n    const defaultImage = 'https://starwars-visualguide.com/assets/img/big-placeholder.jpg'\r\n    const url = await imageAPI.getUrlImagePlanets(id)\r\n    !url ? dispatch(setImageUrl(defaultImage)) : dispatch(setImageUrl(url))\r\n} //+\r\n\r\nexport const requestListPlanets = (page) => async (dispatch) => {\r\n    \r\n    const planet = await itemsListAPI.getListPlanets(page)\r\n   \r\n    const newList = !planet ? [] : planet.map(editStatePlanet)\r\n    dispatch(setListPlanets(newList))\r\n    const id = planet && await newList[0].id\r\n    dispatch(setItemId(id))\r\n} //+\r\n\r\n \r\n\r\nconst editStatePlanet = (planet) => {\r\n    return {\r\n        id: +extractId(planet.url),\r\n        name: planet.name,\r\n        diameter: planet.diameter,\r\n        population: planet.population,\r\n        rotationPeriod: planet.rotation_period\r\n    }\r\n} // -----\r\n\r\n// const editStateStarships = (starships) => {\r\n//     return {\r\n//         id: extractId(starships.url),\r\n//         name: starship.name,\r\n//         model: starship.model,\r\n//         manufacturer: starship.manufacturer,\r\n//         costInCredits: starship.costInCredits,\r\n//         length: starship.length,\r\n//         crew: starship.crew,\r\n//         passengers: starship.passengers,\r\n//         cargoCapacity: starship.cargoCapacity\r\n//     }\r\n// } //-----\r\n\r\nexport default peoplePageReduce","import React from 'react'\r\nimport './spiner.css'\r\n\r\nconst Spiner = () => {\r\n\r\n    return (\r\n        <div className=\"col-sm-2 spiner\">\r\n        \t\t<div id=\"nest3\"></div>\r\n        \t</div>\r\n    )\r\n}\r\n\r\nexport default Spiner","import React from 'react'\r\n\r\n\r\nconst ShortDescriptionPlanet = ({details}) =>{\r\n    const { diameter, population, rotationPeriod } = details\r\n    return(\r\n    <>   \r\n    <li className=\"personDetails-list__item list-group-item \">Diametr: {diameter}</li> \r\n    <li className=\"personDetails-list__item list-group-item \">Population: {population}</li> \r\n    <li className=\"personDetails-list__item list-group-item \">Rotation Period: {rotationPeriod}</li> \r\n   </>\r\n    )\r\n}\r\n\r\nexport default ShortDescriptionPlanet\r\n","import React from 'react'\r\n\r\n\r\nconst RenderDetailsPeople = ({details}) =>{\r\n    const { gender ,birthYear, eyeColor } = details\r\n    return( \r\n    <>   \r\n    <li className=\"personDetails-list__item list-group-item \">Gender: {gender}</li> \r\n    <li className=\"personDetails-list__item list-group-item \">Birth year: {birthYear}</li> \r\n    <li className=\"personDetails-list__item list-group-item \">Eye color: {eyeColor}</li> \r\n   </>\r\n    )\r\n}\r\n\r\nexport default RenderDetailsPeople\r\n","import React from 'react'\r\n\r\n\r\nconst ShortDescriptionStarships = ({ details }) => {\r\n    const { model, manufacturer, costInCredits, length, crew, passengers, cargo_capacity } = details\r\n    return (\r\n        <>\r\n            <li className=\"personDetails-list__item list-group-item \">Model: {model}</li>\r\n            <li className=\"personDetails-list__item list-group-item \">Manufacturer: {manufacturer}</li>\r\n            <li className=\"personDetails-list__item list-group-item \">Cost in credits: {costInCredits}</li>\r\n            <li className=\"personDetails-list__item list-group-item \">Length: {length}</li>\r\n            <li className=\"personDetails-list__item list-group-item \">Crew: {crew}</li>\r\n            <li className=\"personDetails-list__item list-group-item \">Passengers: {passengers}</li>\r\n            <li className=\"personDetails-list__item list-group-item \">Cargo Capacity: {cargo_capacity}</li>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ShortDescriptionStarships\r\n","import React  from 'react'\r\nimport './person-details.css'\r\nimport Spiner from '../../../spiner/spiner'\r\nimport ShortDescriptionPlanet from '../../../PlanetsPage/ShortDescriptionPlanet'\r\nimport ShortDescriptionPeople from '../../../peoplePage/ShortDescriptionPeople'\r\nimport ShortDescriptionStarships from '../../../StarshipsPage/ShortDescriptionStarships'\r\n\r\n\r\n\r\nconst PersonDetails = ({imageUrl, info,way }) => {\r\n\r\n    const itemInfo = info.map((e) => {\r\n        \r\n        const {name} = e\r\n        \r\n        return (\r\n            <div key={name} className='personDetails d-flex jumbotron'>\r\n               \r\n               <div className='personDetails__img'>\r\n                    <img className='personDetails__picture'  src={imageUrl} alt='' />\r\n                </div>\r\n                 \r\n\r\n                <div className='personDetails__description'>\r\n                    <div className='personDetails__title'><h3 className='personDetails-title__name'>{name} </h3></div>\r\n                    <ul className=\"personDetails__list list-group list-group-flush m-0\">\r\n                       \r\n                       {way === 'planet' \r\n                       ? <ShortDescriptionPlanet details={e} /> \r\n                       : way === 'people' \r\n                       ? <ShortDescriptionPeople details={e} />\r\n                       : <ShortDescriptionStarships details={e} />\r\n                       } \r\n\r\n                        \r\n                       \r\n                    </ul>\r\n                </div>\r\n            </div>)\r\n    })\r\n    if(!imageUrl || !info){\r\n        return <Spiner />\r\n    }\r\n    return (\r\n        <>\r\n            {itemInfo}\r\n        </>\r\n    )\r\n\r\n}\r\nexport default PersonDetails\r\n","import React, { useEffect } from 'react'\r\nimport Spiner from '../../../spiner/spiner'\r\nimport './item-list.css'\r\n\r\nconst ItemList =({ list, page, togglePage,requestList,children})=>{\r\n    \r\n    useEffect(()=>{\r\n        requestList(page)\r\n    },[page,requestList])\r\n \r\n        if( !page ){\r\n            return <Spiner />\r\n        }\r\n        return (\r\n            <div className='item-list mr-5'>\r\n                <div>\r\n                    <div className='d-flex justify-content-between'>\r\n                        <button\r\n                            className={page > 1 ? 'btn btn-dark' : 'btn btn-dark disabled'}\r\n                            onClick={page > 1 ? ()=>togglePage('m',page) : null}>Previous page</button>\r\n                        <span className='d-inline-flex p-2 bd-highlight'>{page} number page </span>\r\n                        <button\r\n                            className={list.length ? 'btn btn-dark' : 'btn btn-dark disabled'}\r\n                            onClick={list.length ? ()=>togglePage('p',page) : null}>Next page</button>\r\n                    </div>\r\n                </div>\r\n                  \r\n                <ul className='list-group'>\r\n                    {children}\r\n                </ul>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ItemList","import React, { useEffect } from 'react'\r\nimport './PageContainer.css'\r\n\r\nconst PageContainer =({setStartId, getUrlimage, requestInfo,idItem,children})=>{\r\n\r\n    useEffect(()=>{\r\n        setStartId(idItem)\r\n        getUrlimage(idItem)\r\n        requestInfo(idItem)\r\n    },[idItem,setStartId,getUrlimage,requestInfo])\r\n    \r\n    \r\n        return (\r\n            <div className='blockPage'>\r\n              {children}\r\n            </div>\r\n        )\r\n}    \r\n \r\nexport default PageContainer ","import React, { Fragment } from 'react'\r\nimport '../../../PageContainer/PageContainer.css'\r\nimport Spinner from '../../../../spiner/spiner'\r\n\r\n\r\nconst RenderItem = ({ list, setStartId, idItem, way}) =>{\r\n    \r\n    const peopleList = list.map(elem => {\r\n        \r\n        let value= Object.values(elem)\r\n        \r\n        const [ id, name, temp, temp1 ] = value\r\n        const classActive = 'list-group-item list-group-item-action list active'\r\n        const classDefault = 'list-group-item list-group-item-action list'\r\n        \r\n        return (\r\n            <li\r\n                id={id}\r\n                key={id}\r\n                onClick={() => { setStartId(id) }}\r\n                className={id !== idItem ? classDefault : classActive}>\r\n                <span className='name'>{name}</span> {way!=='starships'?<span className='label'>{temp}, {temp1}</span>:null}\r\n            </li>\r\n        )\r\n    }) \r\n\r\n    if (!list) {\r\n        return <Spinner />;\r\n    } \r\n\r\n    return (\r\n    <Fragment>\r\n        {peopleList}\r\n    </Fragment>\r\n    )\r\n       \r\n}\r\n\r\nexport default RenderItem\r\n","import React from 'react'\r\nimport { getUrlimagePlanet, setStartIdPlanets, requestPlanetInfo, requestListPlanets, togglePagePlanet } from '../redux/planetsPageReduce'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport PersonDetails from '../СommonСontainer/PageContainer/PersonDetails/person-details'\r\nimport ItemList from '../СommonСontainer/PageContainer/ItemList/item-list'\r\nimport PageContainer from '../СommonСontainer/PageContainer/PageContainer'\r\nimport RenderItem from '../СommonСontainer/PageContainer/ItemList/RenderItem/renderItem'\r\n\r\n\r\n\r\nconst PlanetsPageContainer = (props) => {\r\n\r\n    const { setStartIdPlanets, imageUrlPlanet, planetInfo, listPlanets, requestListPlanets, requestPlanetInfo,\r\n        getUrlimagePlanet, pagePlanets, idItemPlanets } = props\r\n\r\n    return (\r\n        <PageContainer\r\n            getUrlimage={getUrlimagePlanet}\r\n            requestInfo={requestPlanetInfo}\r\n            idItem={idItemPlanets}\r\n            setStartId={setStartIdPlanets} >\r\n\r\n            <ItemList\r\n                list={listPlanets}\r\n                page={pagePlanets}\r\n                togglePage={props.togglePagePlanet}\r\n                requestList={requestListPlanets}>\r\n                <RenderItem\r\n                    list={listPlanets}\r\n                    setStartId={setStartIdPlanets}\r\n                    idItem={idItemPlanets} />\r\n            </ItemList>\r\n\r\n            <PersonDetails\r\n                imageUrl={imageUrlPlanet}\r\n                info={planetInfo}\r\n                way={'planet'} />\r\n\r\n        </PageContainer>\r\n\r\n\r\n\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        idItemPlanets: state.planetsPage.idItemPlanets,\r\n        imageUrlPlanet: state.planetsPage.imageUrlPlanet,\r\n        planetInfo: state.planetsPage.planetInfo,\r\n        listPlanets: state.planetsPage.listPlanets,\r\n        pagePlanets: state.planetsPage.pagePlanets,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setStartIdPlanets, getUrlimagePlanet, requestPlanetInfo, requestListPlanets, togglePagePlanet\r\n        })\r\n)(PlanetsPageContainer)\r\n","import { imageAPI, itemsListAPI, personalAPI } from \"../API/Api\"\r\nimport { extractId } from \"../helpers/getIdFromImage\"\r\n\r\nconst SET_PEOPLE_INFO = 'SET_PEOPLE_INFO'\r\nconst SET_IMAGE_URL_PEOPLE = 'SET_IMAGE_URL_PEOPLE'\r\nconst SET_LIST_PEOPLE = 'SET_LIST_PEOPLE'\r\nconst SET_ID_ITEM_PEOPLE = 'SET_ID_ITEM_PEOPLE'\r\nconst SET_NEW_PAGE_PEOPLE = 'SET_NEW_PAGE_PEOPLE'\r\n\r\n\r\nlet initialState = {\r\n    imageUrlPeople: null,\r\n    listPeople: [],\r\n    idItemPeople: 1,\r\n    \r\n    peopleInfo: [],\r\n    pagePeople: 1\r\n}\r\n\r\nconst peoplePageReduce =(state = initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_IMAGE_URL_PEOPLE :{\r\n            return { ...state, imageUrlPeople: action.imageUrlPeople}\r\n        }\r\n        case SET_LIST_PEOPLE :{\r\n           \r\n            return { ...state, listPeople: action.listPeople}\r\n        }\r\n        case SET_PEOPLE_INFO :{\r\n           \r\n            return { ...state, peopleInfo: [action.peopleInfo]}\r\n        }\r\n        case SET_ID_ITEM_PEOPLE :{\r\n           \r\n            return { ...state, idItemPeople: action.idItemPeople}\r\n        }\r\n        case SET_NEW_PAGE_PEOPLE :{\r\n           \r\n            return { ...state, pagePeople: action.pagePeople}\r\n        }\r\n       \r\n\r\n\r\n        default: return state\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport const setImageUrl = imageUrlPeople => ({type: SET_IMAGE_URL_PEOPLE, imageUrlPeople}) \r\nexport const setListPeople = listPeople => ({type: SET_LIST_PEOPLE, listPeople}) \r\nexport const setPeopleInfo = peopleInfo => ({type: SET_PEOPLE_INFO, peopleInfo})\r\nexport const setItemId = idItemPeople => ({type: SET_ID_ITEM_PEOPLE, idItemPeople})\r\nexport const setNewPage = pagePeople => ({type: SET_NEW_PAGE_PEOPLE, pagePeople})\r\n\r\n\r\n\r\n\r\n\r\nexport const setStartIdPeople = (id) => async (dispatch) => {   \r\n    await dispatch(setItemId(id))   \r\n}\r\n\r\nexport const togglePagePeople = (toggle='p', page) => async (dispatch) => {  \r\n    const newPage = toggle === 'm' ? page - 1 : page + 1\r\n   await dispatch(setNewPage(newPage))\r\n}\r\n\r\n\r\n\r\n// export const planetInfo = (id) => async (dispatch) => {\r\n//     const planets = await personalAPI.getPlanet(id)\r\n//     dispatch(setPlanetInfo(editStatePlanet(planets)))\r\n// } // -----\r\n\r\n// export const toggleNextPage = (page) => async (dispatch) => {  \r\n//     const nextPage = page + 1 \r\n//     await dispatch(setNewPage(nextPage))\r\n// }\r\n// export const togglePrevPage = (page) => async (dispatch) => {   \r\n//     const prevPage = page - 1\r\n//     await dispatch(setNewPage(prevPage))\r\n// }\r\n\r\n// export const setStartId = (id) => async (dispatch) => {   \r\n//     await dispatch(setItemId(id))\r\n// } //+\r\n\r\n\r\nexport const requestPeopleInfo = (id) => async (dispatch) => {\r\n    \r\n    const people = await personalAPI.getPerson(id)\r\n    dispatch(setPeopleInfo(editStatePeople(people)))\r\n    \r\n}  //+\r\n\r\n\r\nexport const getUrlimagePeople = (id) => async (dispatch) => {\r\n   \r\n    const url = await imageAPI.getUrlImagePeople(id)\r\n    \r\n    dispatch(setImageUrl(url))\r\n    \r\n} //+\r\n\r\nexport const requestListPeople = (page) => async (dispatch) => {\r\n    const people = await itemsListAPI.getListPeople(page)\r\n    const newList = !people ? [] : people.map(editStatePeople)\r\n    dispatch(setListPeople(newList))\r\n    const id = people && await newList[0].id\r\n    dispatch(setItemId(id))\r\n   \r\n} //+\r\n\r\nconst editStatePeople = (people) => {\r\n    return {\r\n        id: +extractId(people.url),\r\n        name: people.name,\r\n        gender: people.gender,\r\n        birthYear: people.birth_year,\r\n        eyeColor: people.eye_color,\r\n        hairColor: people.hair_color\r\n    }\r\n} \r\n\r\n// const editStatePlanet = (planets) => {\r\n//     return {\r\n//         id: extractId(planets.url),\r\n//         name: planets.name,\r\n//         diameter: planets.diameter,\r\n//         population: planets.population,\r\n//         rotationPeriod: planets.rotation_period\r\n//     }\r\n// } // -----\r\n\r\n// const editStateStarships = (starships) => {\r\n//     return { \r\n//         id: extractId(starships.url),\r\n//         name: starship.name,\r\n//         model: starship.model,\r\n//         manufacturer: starship.manufacturer,\r\n//         costInCredits: starship.costInCredits,\r\n//         length: starship.length,\r\n//         crew: starship.crew,\r\n//         passengers: starship.passengers,\r\n//         cargoCapacity: starship.cargoCapacity\r\n//     }\r\n// } //-----\r\n\r\nexport default peoplePageReduce","import React from 'react'\r\nimport { getUrlimagePeople, setStartIdPeople, requestPeopleInfo, requestListPeople, togglePagePeople } from '../redux/peoplePageReduce'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport PersonDetails from '../СommonСontainer/PageContainer/PersonDetails/person-details'\r\nimport ItemList from '../СommonСontainer/PageContainer/ItemList/item-list'\r\nimport PageContainer from '../СommonСontainer/PageContainer/PageContainer'\r\nimport RenderItem from '../СommonСontainer/PageContainer/ItemList/RenderItem/renderItem'\r\n\r\nconst PeoplePageContainer = ({ setStartIdPeople, getUrlimagePeople, requestPeopleInfo, listPeople, peopleInfo, requestListPeople, imageUrlPeople, pagePeople, idItemPeople, togglePagePeople}) => {\r\n   \r\n    return (\r\n\r\n        <PageContainer\r\n            getUrlimage={getUrlimagePeople}\r\n            requestInfo={requestPeopleInfo}\r\n            idItem={idItemPeople}\r\n            setStartId={setStartIdPeople}>\r\n            <ItemList\r\n                list={listPeople}\r\n                page={pagePeople}\r\n                togglePage={togglePagePeople}\r\n                requestList={requestListPeople}>\r\n                <RenderItem\r\n                    list={listPeople}\r\n                    setStartId={setStartIdPeople}\r\n                    idItem={idItemPeople} />\r\n            </ItemList>\r\n            <PersonDetails\r\n                imageUrl={imageUrlPeople}\r\n                info={peopleInfo}\r\n                way={'people'} />\r\n        </PageContainer>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idItemPeople: state.peoplePage.idItemPeople,\r\n        imageUrlPeople: state.peoplePage.imageUrlPeople,\r\n        listPeople: state.peoplePage.listPeople,\r\n        peopleInfo: state.peoplePage.peopleInfo,\r\n        pagePeople: state.peoplePage.pagePeople,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setStartIdPeople, getUrlimagePeople, requestPeopleInfo, requestListPeople,\r\n            togglePagePeople,\r\n\r\n        })\r\n)(PeoplePageContainer)\r\n","import { imageAPI, itemsListAPI, personalAPI } from \"../API/Api\"\r\nimport { extractId } from \"../helpers/getIdFromImage\"\r\n\r\nconst SET_STARSHIPS_INFO = 'SET_STARSHIPS_INFO'\r\nconst SET_IMAGE_URL_STARSHIPS = 'SET_IMAGE_URL_STARSHIPS'\r\nconst SET_LIST_STARSHIPS = 'SET_LIST_STARSHIPS'\r\nconst SET_ID_ITEM_STARSHIPS = 'SET_ID_ITEM_STARSHIPS'\r\nconst SET_NEW_PAGE_STARSHIPS = 'SET_NEW_PAGE_STARSHIPS'\r\n\r\n\r\n\r\nlet initialState = {\r\n    imageUrlStarships: null,\r\n    listStarships: [],\r\n    idItemStarships: 1,\r\n    starshipsInfo: [],\r\n    pageStarships: 1\r\n}\r\n\r\nconst starshipsPageReduce =(state = initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n\r\n        case SET_IMAGE_URL_STARSHIPS :{\r\n            return { ...state, imageUrlStarships: action.imageUrlStarships}\r\n        }\r\n        case SET_LIST_STARSHIPS :{\r\n           \r\n            return { ...state, listStarships: action.listStarships}\r\n        }\r\n        case SET_STARSHIPS_INFO :{\r\n           \r\n            return { ...state, starshipsInfo: [action.starshipsInfo]}\r\n        }\r\n        case SET_ID_ITEM_STARSHIPS :{\r\n           \r\n            return { ...state, idItemStarships: action.idItemStarships}\r\n        }\r\n        case SET_NEW_PAGE_STARSHIPS :{\r\n           \r\n            return { ...state, pageStarships: action.pageStarships}\r\n        }      \r\n\r\n\r\n        default: return state\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport const setImageUrl = imageUrlStarships => ({type: SET_IMAGE_URL_STARSHIPS, imageUrlStarships}) //+\r\nexport const setListStarships = listStarships => ({type: SET_LIST_STARSHIPS, listStarships}) //+\r\n\r\nexport const setStarshipsInfo = starshipsInfo => ({type: SET_STARSHIPS_INFO, starshipsInfo})\r\nexport const setItemId = idItemStarships => ({type: SET_ID_ITEM_STARSHIPS, idItemStarships})\r\nexport const setNewPage = pageStarships => ({type: SET_NEW_PAGE_STARSHIPS, pageStarships})\r\n\r\n\r\n\r\n\r\n\r\nexport const setStartIdStarships = (id) => async (dispatch) => {   \r\n    await dispatch(setItemId(id))   \r\n}\r\n\r\nexport const togglePageStarships = (toggle='p', page) => async (dispatch) => {  \r\n    \r\n    const newPage = toggle === 'm' ? page - 1 : page + 1\r\n   \r\n   await dispatch(setNewPage(newPage))\r\n\r\n   \r\n}\r\n\r\n\r\nexport const requestStarshipsInfo = (id) => async (dispatch) => {\r\n    \r\n    const Starships = await personalAPI.getStarshipsInfo(id)\r\n    dispatch(setStarshipsInfo(editStateStarships(Starships)))\r\n    \r\n}  //+\r\n\r\n\r\nexport const getUrlimageStarships = (id) => async (dispatch) => {\r\n    const defaultImage = 'https://starwars-visualguide.com/assets/img/big-placeholder.jpg'\r\n    const url = await imageAPI.getUrlImageStarships(id)\r\n    !url ? dispatch(setImageUrl(defaultImage)) : dispatch(setImageUrl(url))\r\n    \r\n    \r\n} //+\r\n\r\nexport const requestListStarships = (page) => async (dispatch) => {\r\n    const starships = await itemsListAPI.getListStarships(page)\r\n    const newList = !starships ? [] : starships.map(editStateStarships)\r\n    dispatch(setListStarships(newList))\r\n    const id = starships && await newList[0].id\r\n    dispatch(setItemId(id))\r\n   \r\n} //+\r\n\r\n// const editStateStarships = (Starships) => {\r\n//     return {\r\n//         id: +extractId(Starships.url),\r\n//         name: Starships.name,\r\n//         gender: Starships.gender,\r\n//         birthYear: Starships.birth_year,\r\n//         eyeColor: Starships.eye_color,\r\n//         hairColor: Starships.hair_color\r\n//     }\r\n// } \r\n\r\n// const editStatePlanet = (planets) => {\r\n//     return {\r\n//         id: extractId(planets.url),\r\n//         name: planets.name,\r\n//         diameter: planets.diameter,\r\n//         population: planets.population,\r\n//         rotationPeriod: planets.rotation_period\r\n//     }\r\n// } // -----\r\n\r\nconst editStateStarships = (starships) => {\r\n    return { \r\n        id: +extractId(starships.url),\r\n        name: starships.name,\r\n        model: starships.model,\r\n        manufacturer: starships.manufacturer,\r\n        costInCredits: starships.cost_in_credits,\r\n        length: starships.length,\r\n        crew: starships.crew,\r\n        passengers: starships.passengers,\r\n        cargo_capacity: starships.cargo_capacity\r\n    }\r\n} \r\n\r\nexport default starshipsPageReduce","import React from 'react'\r\nimport { setStartIdStarships, togglePageStarships, requestStarshipsInfo, getUrlimageStarships, requestListStarships } from '../redux/starshipsPageReduce'\r\nimport { compose } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport PersonDetails from '../СommonСontainer/PageContainer/PersonDetails/person-details'\r\nimport ItemList from '../СommonСontainer/PageContainer/ItemList/item-list'\r\nimport PageContainer from '../СommonСontainer/PageContainer/PageContainer'\r\nimport RenderItem from '../СommonСontainer/PageContainer/ItemList/RenderItem/renderItem'\r\n\r\n\r\n\r\n\r\nconst StarshipsPageContainer = (props) => {\r\n\r\n    return (\r\n        <PageContainer\r\n            getUrlimage={props.getUrlimageStarships}\r\n            requestInfo={props.requestStarshipsInfo}\r\n            idItem={props.idItemStarships}\r\n            setStartId={props.setStartIdStarships} >\r\n            <ItemList\r\n                list={props.listStarships}\r\n                page={props.pageStarships}\r\n                togglePage={props.togglePageStarships}\r\n                requestList={props.requestListStarships}>\r\n                <RenderItem\r\n                    list={props.listStarships}\r\n                    setStartId={props.setStartIdStarships}\r\n                    idItem={props.idItemStarships}\r\n                    way={'starships'} />\r\n            </ItemList>\r\n            <PersonDetails\r\n                imageUrl={props.imageUrlStarships}\r\n                info={props.starshipsInfo}\r\n                way={'starships'} />\r\n        </PageContainer>\r\n\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        idItemStarships: state.starshipsPage.idItemStarships,\r\n        imageUrlStarships: state.starshipsPage.imageUrlStarships,\r\n        starshipsInfo: state.starshipsPage.starshipsInfo,\r\n        listStarships: state.starshipsPage.listStarships,\r\n        pageStarships: state.starshipsPage.pageStarships,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setStartIdStarships, togglePageStarships, requestStarshipsInfo, getUrlimageStarships, requestListStarships,\r\n        })\r\n)(StarshipsPageContainer)\r\n","import React from 'react'\r\nimport { Route } from \"react-router-dom\"\r\nimport PlanetsPageContainer from '../PlanetsPage/PlanetsPageContainer'\r\nimport PeoplePageContainer from '../peoplePage/PeoplePageContainer'\r\nimport StarshipsPageContainer from '../StarshipsPage/StarshipsPageContainer'\r\n\r\n\r\n\r\nconst CommonContainer =()=> {\r\n\r\n        return (\r\n            <div className='container '>\r\n                <Route path='/people' >\r\n                    <PeoplePageContainer />\r\n                </Route>\r\n\r\n                <Route path='/planets' >\r\n                    <PlanetsPageContainer />\r\n                </Route>\r\n\r\n                <Route path='/starships' >\r\n                    <StarshipsPageContainer />\r\n                </Route>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\n\r\nexport default CommonContainer\r\n","import React,{Fragment} from 'react'\r\nimport './random-planet.css'\r\nimport Spiner from '../spiner/spiner'\r\n\r\n\r\n\r\nconst RandomPlanets =({info,imageUrl})=>{\r\n \r\n    if(!imageUrl || !info){\r\n       return <Spiner />\r\n    }\r\n    return (\r\n        <div className='random-planet d-flex jumbotron mb-5 rounded '>\r\n           <PlanetView \r\n           info={info} imageUrl={imageUrl} \r\n           /> \r\n        </div>\r\n    )\r\n}\r\nexport default RandomPlanets\r\n\r\n\r\n\r\nconst PlanetView = ({info,imageUrl})=>{\r\n\r\n    const {name,rotationPeriod,population,diameter} = info\r\n\r\n    \r\n    return(\r\n        <Fragment>\r\n             <div className='random-planet__image'>\r\n                <img \r\n                    className='random-planet__picture' \r\n                    src={imageUrl}\r\n                    alt='' />\r\n            </div>\r\n           \r\n\r\n            <div className='random-planet__description'>\r\n                <h2 className='random-planet__title'>{name}</h2>\r\n                <ul className='random-planet__list list-group list-group-flush'>\r\n                    <li className=\"random-planet__item list-group-item \">Population: {population} </li>\r\n                    <li className=\"random-planet__item list-group-item \">Rotation period: {rotationPeriod}</li>\r\n                    <li className=\"random-planet__item list-group-item \">Diameter {diameter}</li>\r\n                </ul>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import React, { useEffect,useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport RandomPlanets from './random-planet.js'\r\nimport { requestRandomPlanet,getUrlimagePlanet} from '../redux/planetsPageReduce'\r\n\r\n\r\n\r\n\r\nconst RandomPlanetsContainer =({randomPlanets,requestRandomPlanet,randomUrlImage})=> {\r\n\r\n    const [random,setRandom]=useState(2)\r\n\r\n    let idR = Math.round(Math.random() * 16 + 2)\r\n    let timerId = setTimeout(()=>setRandom(idR),5000)\r\n    \r\n        useEffect(()=>{\r\n            requestRandomPlanet(random)\r\n        },[requestRandomPlanet,random])\r\n\r\n        useEffect(()=>{\r\n           return()=>{\r\n            clearTimeout(timerId)\r\n           }\r\n        },[timerId])\r\n                \r\n       \r\n        return (\r\n            <div>\r\n                <RandomPlanets \r\n                    info={randomPlanets}\r\n                    imageUrl={randomUrlImage}\r\n                    />\r\n            </div>\r\n        )\r\n    \r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        randomPlanets: state.planetsPage.randomPlanets,\r\n        randomUrlImage: state.planetsPage.randomUrlImage,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            requestRandomPlanet,getUrlimagePlanet\r\n         })\r\n)(RandomPlanetsContainer)","import React, { Component } from 'react'\r\nimport Header from '../header/header'\r\nimport './app.css'\r\nimport CommonContainer from '../СommonСontainer/CommonContainer'\r\nimport RandomPlanetsContainer from '../random-planet/RandomPlanetsContainer'\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className='container app'>\r\n                \r\n                <Header />\r\n\r\n                <RandomPlanetsContainer />\r\n                \r\n                <CommonContainer /> \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport peoplePageReduce from './peoplePageReduce';\r\nimport planetsPageReduce from './planetsPageReduce';\r\nimport starshipsPageReduce from './starshipsPageReduce';\r\n\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    planetsPage: planetsPageReduce,\r\n    peoplePage: peoplePageReduce,\r\n    starshipsPage: starshipsPageReduce,\r\n    \r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDom from 'react-dom'\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/app/app'\r\nimport store from './components/redux/redux-store';\r\n\r\nReactDom.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </BrowserRouter>,\r\n\r\n    document.getElementById('root'))\r\n\r\nif (module.hot) {\r\n    module.hot.accept()\r\n}"],"sourceRoot":""}